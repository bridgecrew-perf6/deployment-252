# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
  branches:
    exclude:
      - '*'

pr:
  branches:
    include:
      - '*'

pool:
  vmImage: ubuntu-latest

steps:
  - task: SonarCloudPrepare@1
    inputs:
      SonarCloud: 'Sonarcloud'
      organization: 'nikunjkheni771'
      scannerMode: 'Other'
      extraProperties: |
        # Additional properties that will be passed to the scanner, 
        # Put one key=value per line, example:
        # sonar.exclusions=**/*.bin
        sonar.login=$(SONAR_TOKEN)
        sonar.projectKey=nikunjkheni771_deployment

  - task: Maven@3
    inputs:
      mavenPomFile: 'pom.xml'
      mavenOptions: '-Xmx3072m'
      testResultsFiles: '**/surefire-reports/TEST-*.xml'
      publishJUnitResults: true
      codeCoverageToolOption: 'JaCoCo'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: '1.11'
      jdkArchitectureOption: 'x64'
      mavenVersionOption: 'Default'
      mavenAuthenticateFeed: false
      effectivePomSkip: false
      sonarQubeRunAnalysis: true
      sqMavenPluginVersionChoice: 'latest'
      goals: 'package'

  - task: SonarCloudPublish@1
    inputs:
      pollingTimeoutSec: '300'

  - task: CopyFiles@2
    inputs:
      SourceFolder: '$(system.defaultworkingdirectory)'
      Contents: '**/*.jar'
      TargetFolder: '$(build.artifactstagingdirectory)'

  - task: Docker@2
    inputs:
      containerRegistry: 'docker hub service connection'
      repository: 'nikunjkheni/deployment'
      command: 'buildAndPush'
      Dockerfile: '**/Dockerfile'
      tags: $(Build.BuildId)

  - task: PublishBuildArtifacts@1
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'
